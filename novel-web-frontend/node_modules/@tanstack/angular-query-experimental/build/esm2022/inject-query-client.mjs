import { createNoopInjectionToken } from './util/create-injection-token/create-injection-token';
const tokens = createNoopInjectionToken('QueryClientToken');
/**
 * Injects the `QueryClient` instance into the component or service.
 *
 * **Example**
 * ```ts
 * const queryClient = injectQueryClient();
 * ```
 * @returns The `QueryClient` instance.
 * @public
 */
export const injectQueryClient = tokens[0];
/**
 * Usually {@link provideTanStackQuery} is used once to set up TanStack Query and the
 * {@link https://tanstack.com/query/latest/docs/reference/QueryClient|QueryClient}
 * for the entire application. You can use `provideQueryClient` to provide a
 * different `QueryClient` instance for a part of the application.
 * @public
 */
export const provideQueryClient = tokens[1];
export const QUERY_CLIENT = tokens[2];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5qZWN0LXF1ZXJ5LWNsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmplY3QtcXVlcnktY2xpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHNEQUFzRCxDQUFBO0FBRy9GLE1BQU0sTUFBTSxHQUFHLHdCQUF3QixDQUFjLGtCQUFrQixDQUFDLENBQUE7QUFFeEU7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBRTFDOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUUzQyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTm9vcEluamVjdGlvblRva2VuIH0gZnJvbSAnLi91dGlsL2NyZWF0ZS1pbmplY3Rpb24tdG9rZW4vY3JlYXRlLWluamVjdGlvbi10b2tlbidcbmltcG9ydCB0eXBlIHsgUXVlcnlDbGllbnQgfSBmcm9tICdAdGFuc3RhY2svcXVlcnktY29yZSdcblxuY29uc3QgdG9rZW5zID0gY3JlYXRlTm9vcEluamVjdGlvblRva2VuPFF1ZXJ5Q2xpZW50PignUXVlcnlDbGllbnRUb2tlbicpXG5cbi8qKlxuICogSW5qZWN0cyB0aGUgYFF1ZXJ5Q2xpZW50YCBpbnN0YW5jZSBpbnRvIHRoZSBjb21wb25lbnQgb3Igc2VydmljZS5cbiAqXG4gKiAqKkV4YW1wbGUqKlxuICogYGBgdHNcbiAqIGNvbnN0IHF1ZXJ5Q2xpZW50ID0gaW5qZWN0UXVlcnlDbGllbnQoKTtcbiAqIGBgYFxuICogQHJldHVybnMgVGhlIGBRdWVyeUNsaWVudGAgaW5zdGFuY2UuXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBpbmplY3RRdWVyeUNsaWVudCA9IHRva2Vuc1swXVxuXG4vKipcbiAqIFVzdWFsbHkge0BsaW5rIHByb3ZpZGVUYW5TdGFja1F1ZXJ5fSBpcyB1c2VkIG9uY2UgdG8gc2V0IHVwIFRhblN0YWNrIFF1ZXJ5IGFuZCB0aGVcbiAqIHtAbGluayBodHRwczovL3RhbnN0YWNrLmNvbS9xdWVyeS9sYXRlc3QvZG9jcy9yZWZlcmVuY2UvUXVlcnlDbGllbnR8UXVlcnlDbGllbnR9XG4gKiBmb3IgdGhlIGVudGlyZSBhcHBsaWNhdGlvbi4gWW91IGNhbiB1c2UgYHByb3ZpZGVRdWVyeUNsaWVudGAgdG8gcHJvdmlkZSBhXG4gKiBkaWZmZXJlbnQgYFF1ZXJ5Q2xpZW50YCBpbnN0YW5jZSBmb3IgYSBwYXJ0IG9mIHRoZSBhcHBsaWNhdGlvbi5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IHByb3ZpZGVRdWVyeUNsaWVudCA9IHRva2Vuc1sxXVxuXG5leHBvcnQgY29uc3QgUVVFUllfQ0xJRU5UID0gdG9rZW5zWzJdXG4iXX0=